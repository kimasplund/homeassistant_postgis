#!/usr/bin/with-contenv bashio
# ==============================================================================
# Generate SSL certificates for PostgreSQL
# ==============================================================================

CERT_DIR="${PGDATA}/ssl"
mkdir -p "${CERT_DIR}"
chown postgres:postgres "${CERT_DIR}"
chmod 700 "${CERT_DIR}"

# Generate a self-signed certificate if it doesn't exist
if [ ! -f "${CERT_DIR}/server.key" ] || [ ! -f "${CERT_DIR}/server.crt" ]; then
    bashio::log.info "Generating SSL certificate for PostgreSQL..."
    
    # Get hostname or IP
    HOSTNAME=$(hostname)
    
    # Create private key
    openssl genrsa -out "${CERT_DIR}/server.key" 2048
    chmod 600 "${CERT_DIR}/server.key"
    chown postgres:postgres "${CERT_DIR}/server.key"
    
    # Create CSR
    openssl req -new -key "${CERT_DIR}/server.key" -out "${CERT_DIR}/server.csr" -subj "/CN=${HOSTNAME}"
    
    # Create self-signed certificate (valid for 10 years)
    openssl x509 -req -in "${CERT_DIR}/server.csr" -signkey "${CERT_DIR}/server.key" -out "${CERT_DIR}/server.crt" -days 3650
    chmod 644 "${CERT_DIR}/server.crt"
    chown postgres:postgres "${CERT_DIR}/server.crt"
    
    # Clean up
    rm "${CERT_DIR}/server.csr"
    
    bashio::log.info "SSL certificate generated successfully"
else
    bashio::log.info "SSL certificates already exist, skipping generation"
fi

# Update PostgreSQL configuration to use SSL
PGCONF="${PGDATA}/postgresql.conf"
sed -i "s/^#ssl = off/ssl = on/" "${PGCONF}"
sed -i "s/^#ssl_cert_file = .*/ssl_cert_file = '\/var\/lib\/postgresql\/data\/ssl\/server.crt'/" "${PGCONF}"
sed -i "s/^#ssl_key_file = .*/ssl_key_file = '\/var\/lib\/postgresql\/data\/ssl\/server.key'/" "${PGCONF}"

bashio::log.info "PostgreSQL configured to use SSL" 